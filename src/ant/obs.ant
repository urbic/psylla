<?xml version="1.0" encoding="UTF-8"?>
<project name="obs" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">

	<property name="obs.package.name" value="${project.name}"/>
	<property name="obs.package.version" value="${project.version}"/>
	<property name="obs.package.summary" value="${project.summary}"/>
	<property name="obs.package.description" value="${project.description}"/>
	<property name="obs.build.distro" value="openSUSE_Tumbleweed"/>
	<property name="obs.build.apiurl" value="https://api.opensuse.org"/>
	<property name="obs.build.arch" value="x86_64"/>
	<property name="obs.user" value="${project.developer.id}"/>
	<property name="obs.build.project" value="home:${obs.user}:coneforest"/>
	<property name="src.obs" location="${src}/obs"/>
	<condition
		property="obs.build.desc"
		value="${obs.package.name}.dsc"
		else="${obs.package.name}.spec"
		>
		<or>
			<contains string="${obs.build.distro}" substring="Debian"/>
			<contains string="${obs.build.distro}" substring="Ubuntu"/>
			<contains string="${obs.build.distro}" substring="Raspbian"/>
		</or>
	</condition>
	<property environment="env"/>
	<condition property="obs.password.set" value="true" else="false">
		<isset property="env.OBS_PASSWORD"/>
	</condition>
	<property name="osc.rc" location="${user.home}/.config/osc/oscrc"/>

	<filterset id="obs.build.filterset">
		<propertyset>
			<propertyref prefix="obs."/>
			<propertyref prefix="project."/>
		</propertyset>
	</filterset>

	<target name="osc.config"
		description="Configure osc"
		>
		<mkdir dir="${user.home}/.config/osc"/>
		<echo file="${osc.rc}" if:true="${obs.password.set}"><![CDATA[[general]
apiurl=${obs.build.apiurl}

[${obs.build.apiurl}]
user=${obs.user}
credentials_mgr_class=osc.credentials.ObfuscatedConfigFileCredentialsManager
pass=
]]></echo>
		<exec executable="osc" if:true="${obs.password.set}">
			<arg value="--config=${osc.rc}"/>
			<arg value="config"/>
			<arg value="${obs.build.apiurl}"/>
			<arg value="pass"/>
			<arg value="${env.OBS_PASSWORD}"/>
		</exec>
	</target>

	<target name="obs.checkout"
		description="Checkout OBS package"
		depends="osc.config"
		>
		<exec dir="${target}" executable="osc">
			<arg value="--config=${osc.rc}"/>
			<arg value="checkout"/>
			<arg value="${obs.build.project}"/>
			<arg value="${obs.package.name}"/>
			<arg value="-o${target.obs}"/>
		</exec>
	</target>

	<target name="obs.copy.spec"
		description="Copy sources and specs to OBS working directory"
		depends="dist.tar,obs.checkout"
		>
		<delete>
			<fileset dir="${target.obs}" includes="*"/>
		</delete>

		<copy todir="${target.obs}" overwrite="yes">
			<fileset dir="${target}" includes="${project.name}-${project.version}.tar.xz"/>
		</copy>
		<copy todir="${target.obs}" filtering="true" overwrite="yes">
			<fileset dir="${src.obs}" includes="*"/>
			<filterset refid="obs.build.filterset"/>
		</copy>
		<copy todir="${target.obs}" filtering="true" overwrite="yes">
			<fileset dir="${src.obs}/debian" includes="*"/>
			<mapper type="glob" from="*" to="debian.*"/>
			<filterset refid="obs.build.filterset"/>
		</copy>
		<exec executable="osc" dir="${target.obs}">
			<arg value="--config=${osc.rc}"/>
			<arg value="addremove"/>
		</exec>
	</target>

	<target name="obs.build"
		description="Build package locally"
		depends="obs.copy.spec"
		>
		<exec executable="osc" dir="${target.obs}">
			<arg value="--config=${osc.rc}"/>
			<arg value="build"/>
			<arg value="--no-service"/>
			<arg value="--no-verify"/>
			<arg value="--trust-all-projects"/>
			<arg value="--alternative-project"/>
			<arg value="${obs.build.project}"/>
			<arg value="${obs.build.distro}"/>
			<arg value="${obs.build.arch}"/>
			<arg value="${obs.build.desc}"/>
		</exec>
	</target>

	<target name="obs.commit"
		description="Commit package to OBS"
		depends="obs.copy.spec,osc.config"
		>
		<exec dir="${target.obs}" executable="osc">
			<arg value="--config=${osc.rc}"/>
			<arg value="commit"/>
			<arg value="-n"/>
		</exec>
	</target>

</project>
