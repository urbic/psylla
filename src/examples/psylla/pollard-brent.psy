#!/usr/bin/psylla

/rho
{
	dict begin
		/n exch def
		n 3 gt
		{
			/x stdrandom n 3 sub uniformdeviate 1 add def
			/y 1 def
			/i 0 def
			/stage 2 def

			{
				n x y sub abs gcd dup 1 ne
				{ exit }
				{ pop }
				ifelse
				i stage eq
				{
					/y x def
					/stage stage 2 mul def
				}
				if
				/x x dup mul 1 add n mod def
				/i i 1 add def
			}
			loop
		}
		{ n }
		ifelse
	end
}
bind def

arguments 0 get tointegral rho tostring say
