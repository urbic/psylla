#!/usr/bin/psylla

/divisor
{
	dict begin
	/n exch def
	/spokes
	[
		11 13 17 19 23 29 31 37 41 43 47 53
		59 61 67 71 73 79 83 89 97 101 103 107
		109 113 121 127 131 137 139 143 149 151 157 163
		167 169 173 179 181 187 191 193 197 199 209 211
	]
	def

	{
		n 2 mod iszero { 2 exit } if
		n 3 mod iszero { 3 exit } if
		n 5 mod iszero { 5 exit } if
		n 7 mod iszero { 7 exit } if

		/d n def
		/flag false def

		{
			0 1 spokes length 1 sub
			{
				/i exch def
				/s spokes i get def
				s dup mul n gt { /flag true def exit } if
				n s mod iszero { /flag true def /d s def exit } if
				spokes dup i get 210 add i exch put
			}
			for
			flag { exit } if
		}
		loop

		d exit
	}
	loop

	end
}
bind def


/factor
{
	dict begin
	/n exch def
	/divisors array def

	{
		/d n divisor def
		/n n d idiv def
		divisors d append
		1 n eq { exit } if
	}
	loop

	divisors

	end
}
bind def

arguments
{
	dup
	print
	':' print
	tointegral factor { ' ' print tostring print } forall
	'' say
}
bind forall
